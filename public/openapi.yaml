openapi: 3.0.3
info:
  title: 'Laravel API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
tags:
  -
    name: Endpoints
    description: ''
paths:
  /api/v1/travels:
    get:
      summary: ''
      operationId: getApiV1Travels
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 10
                      name: 'My Travel'
                      description: hi
                      slug: my-travel-5
                      number_of_days: 100
                      number_of_nights: 99
                  links:
                    first: 'http://localhost:8000/api/v1/travels?page=1'
                    last: 'http://localhost:8000/api/v1/travels?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        page: null
                        active: false
                      -
                        url: 'http://localhost:8000/api/v1/travels?page=1'
                        label: '1'
                        page: 1
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        page: null
                        active: false
                    path: 'http://localhost:8000/api/v1/travels'
                    per_page: 15
                    to: 1
                    total: 1
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 10
                        name: 'My Travel'
                        description: hi
                        slug: my-travel-5
                        number_of_days: 100
                        number_of_nights: 99
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 10
                        name:
                          type: string
                          example: 'My Travel'
                        description:
                          type: string
                          example: hi
                        slug:
                          type: string
                          example: my-travel-5
                        number_of_days:
                          type: integer
                          example: 100
                        number_of_nights:
                          type: integer
                          example: 99
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost:8000/api/v1/travels?page=1'
                      last:
                        type: string
                        example: 'http://localhost:8000/api/v1/travels?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            page: null
                            active: false
                          -
                            url: 'http://localhost:8000/api/v1/travels?page=1'
                            label: '1'
                            page: 1
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            page: null
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            page:
                              type: string
                              example: null
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost:8000/api/v1/travels'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 1
      tags:
        - Endpoints
      security: []
  '/api/v1/travels/{travel_slug}/tours':
    get:
      summary: ''
      operationId: getApiV1TravelsTravel_slugTours
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Travel] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Travel] 1'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                priceFrom:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
                priceTo:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
                dateFrom:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-08-22T17:21:02'
                  nullable: false
                dateTo:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-08-22T17:21:02'
                  nullable: false
                sortBy:
                  type: string
                  description: ''
                  example: price
                  nullable: false
                  enum:
                    - price
                sortOrder:
                  type: string
                  description: ''
                  example: desc
                  nullable: false
                  enum:
                    - asc
                    - desc
      security: []
    parameters:
      -
        in: path
        name: travel_slug
        description: 'The slug of the travel.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/admin/travels:
    post:
      summary: ''
      operationId: postApiV1AdminTravels
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Dolores dolorum amet iste laborum eius est dolor.'
                  nullable: true
                is_public:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                number_of_days:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 13
                  nullable: false
              required:
                - name
                - number_of_days
      security: []
  '/api/v1/admin/travels/{travel_id}/tours':
    post:
      summary: ''
      operationId: postApiV1AdminTravelsTravel_idTours
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                starting_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-08-22T17:21:02'
                  nullable: false
                ending_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>starting_date</code>.'
                  example: '2106-09-21'
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
              required:
                - name
                - starting_date
                - ending_date
                - price
      security: []
    parameters:
      -
        in: path
        name: travel_id
        description: 'The ID of the travel.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/admin/travels/{travel_id}':
    put:
      summary: ''
      operationId: putApiV1AdminTravelsTravel_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Dolores dolorum amet iste laborum eius est dolor.'
                  nullable: true
                is_public:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                number_of_days:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 13
                  nullable: false
              required:
                - name
                - number_of_days
      security: []
    parameters:
      -
        in: path
        name: travel_id
        description: 'The ID of the travel.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/login:
    post:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: qkunze@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'Z5ij-e/dl4m{o,'
                  nullable: false
              required:
                - email
                - password
      security: []
